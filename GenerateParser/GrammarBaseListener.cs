//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


	using GenerateParser.Rules;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class GrammarBaseListener : IGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] GrammarParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] GrammarParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader([NotNull] GrammarParser.HeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader([NotNull] GrammarParser.HeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] GrammarParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] GrammarParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.grammarRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrammarRule([NotNull] GrammarParser.GrammarRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.grammarRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrammarRule([NotNull] GrammarParser.GrammarRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.grammarRuleArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrammarRuleArg([NotNull] GrammarParser.GrammarRuleArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.grammarRuleArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrammarRuleArg([NotNull] GrammarParser.GrammarRuleArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProductions([NotNull] GrammarParser.ProductionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProductions([NotNull] GrammarParser.ProductionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productionsArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProductionsArg([NotNull] GrammarParser.ProductionsArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productionsArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProductionsArg([NotNull] GrammarParser.ProductionsArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.production"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProduction([NotNull] GrammarParser.ProductionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.production"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProduction([NotNull] GrammarParser.ProductionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productionArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProductionArg([NotNull] GrammarParser.ProductionArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productionArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProductionArg([NotNull] GrammarParser.ProductionArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productionArgTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProductionArgTail([NotNull] GrammarParser.ProductionArgTailContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productionArgTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProductionArgTail([NotNull] GrammarParser.ProductionArgTailContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.grammarName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrammarName([NotNull] GrammarParser.GrammarNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.grammarName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrammarName([NotNull] GrammarParser.GrammarNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.lexerToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLexerToken([NotNull] GrammarParser.LexerTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.lexerToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLexerToken([NotNull] GrammarParser.LexerTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.lexerRuleName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLexerRuleName([NotNull] GrammarParser.LexerRuleNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.lexerRuleName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLexerRuleName([NotNull] GrammarParser.LexerRuleNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.lexerRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLexerRule([NotNull] GrammarParser.LexerRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.lexerRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLexerRule([NotNull] GrammarParser.LexerRuleContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
