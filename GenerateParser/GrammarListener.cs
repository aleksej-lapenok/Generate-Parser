//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


	using GenerateParser.Rules;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile([NotNull] GrammarParser.FileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile([NotNull] GrammarParser.FileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeader([NotNull] GrammarParser.HeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeader([NotNull] GrammarParser.HeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] GrammarParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] GrammarParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.grammarRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrammarRule([NotNull] GrammarParser.GrammarRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.grammarRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrammarRule([NotNull] GrammarParser.GrammarRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.grammarRuleArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrammarRuleArg([NotNull] GrammarParser.GrammarRuleArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.grammarRuleArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrammarRuleArg([NotNull] GrammarParser.GrammarRuleArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProductions([NotNull] GrammarParser.ProductionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProductions([NotNull] GrammarParser.ProductionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productionsArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProductionsArg([NotNull] GrammarParser.ProductionsArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productionsArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProductionsArg([NotNull] GrammarParser.ProductionsArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.production"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProduction([NotNull] GrammarParser.ProductionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.production"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProduction([NotNull] GrammarParser.ProductionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productionArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProductionArg([NotNull] GrammarParser.ProductionArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productionArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProductionArg([NotNull] GrammarParser.ProductionArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.productionArgTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProductionArgTail([NotNull] GrammarParser.ProductionArgTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.productionArgTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProductionArgTail([NotNull] GrammarParser.ProductionArgTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.grammarName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrammarName([NotNull] GrammarParser.GrammarNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.grammarName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrammarName([NotNull] GrammarParser.GrammarNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.lexerToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLexerToken([NotNull] GrammarParser.LexerTokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.lexerToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLexerToken([NotNull] GrammarParser.LexerTokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.lexerRuleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLexerRuleName([NotNull] GrammarParser.LexerRuleNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.lexerRuleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLexerRuleName([NotNull] GrammarParser.LexerRuleNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.lexerRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLexerRule([NotNull] GrammarParser.LexerRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.lexerRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLexerRule([NotNull] GrammarParser.LexerRuleContext context);
}
